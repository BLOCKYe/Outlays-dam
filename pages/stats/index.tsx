/*
 * Project: Outlays-dam
 * Author: Dominik ObÅ‚oza
 * User: @BLOCKYe
 * Date: 11.11.2022
 * Time: 23:29
*/

import type {NextPage} from 'next'
import Head from 'next/head'
import {wrapper} from "../../client/common/redux/store";
import AnalyticsView from "../../client/modules/analytics/views/AnalyticsView";
import AuthMiddleware from "../../client/common/axios/authMiddleware";
import Paths from "../../client/common/router/paths";
import {fetchUserProfile} from "../../client/modules/users/redux/UserRepository";
import {fetchLastSpending} from "../../client/modules/analytics/redux/AnalyticsRepository";
import {fetchOutlays} from "../../client/modules/outlays/redux/OutlaysRepository";
import {fetchCategories} from "../../client/modules/categories/redux/CategoriesRepository";

const Analytics: NextPage = () => {
    return (
        <div>
            <Head>
                <title>Analityka - Outlays Dam - monitoruj swoje wydatki</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <AnalyticsView/>

        </div>
    )
}

export const getServerSideProps = wrapper.getServerSideProps(
    (store) => async ({req, res}) => {

        const auth = new AuthMiddleware(req, res).checkToken()
        if (!auth) {
            return {
                redirect: {
                    permanent: false,
                    destination: Paths.LOGIN
                }
            }
        }

        const promises = [
            store.dispatch(fetchUserProfile()),
            store.dispatch(fetchLastSpending()),
            store.dispatch(fetchOutlays()),
            store.dispatch(fetchCategories())
        ]

        await Promise.all(promises)

        return {
            props: {},
        };
    }
);

export default Analytics
